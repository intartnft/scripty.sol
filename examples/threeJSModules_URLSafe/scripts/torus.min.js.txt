import*as THREE from"three";import{OrbitControls}from"OrbitControls";class GIMesh extends THREE.Mesh{copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this}}const SimpleGI=function(e,r){const n=32,t=new THREE.PerspectiveCamera(90,1,.01,100);r.updateMatrixWorld(!0);let o=r.clone();o.autoUpdate=!1;const i=new THREE.WebGLRenderTarget(n,n),a=new THREE.Matrix3,s=new THREE.Vector3,d=new THREE.Vector3;let c=0,l=0;const m=new Float32Array(3),w=new Uint8Array(4096);requestAnimationFrame((function E(){if(3===c)return;const R=r.children[0],p=R.geometry,u=p.attributes,h=u.position.array,T=u.normal.array;if(void 0===u.color){const e=new Float32Array(h.length);p.setAttribute("color",new THREE.BufferAttribute(e,3).setUsage(THREE.DynamicDrawUsage))}const H=u.color.array,y=l,g=h.length/3;for(let r=0;r<32&&!(l>=g);r++){s.fromArray(h,3*l),s.applyMatrix4(R.matrixWorld),d.fromArray(T,3*l),d.applyMatrix3(a.getNormalMatrix(R.matrixWorld)).normalize(),t.position.copy(s),t.lookAt(s.add(d)),e.setRenderTarget(i),e.render(o,t),e.readRenderTargetPixels(i,0,0,n,n,w),m[0]=0,m[1]=0,m[2]=0;for(let e=0,r=w.length;e<r;e+=4)m[0]+=w[e+0],m[1]+=w[e+1],m[2]+=w[e+2];H[3*l+0]=m[0]/261120,H[3*l+1]=m[1]/261120,H[3*l+2]=m[2]/261120,l++}u.color.updateRange.offset=3*y,u.color.updateRange.count=3*(l-y),u.color.needsUpdate=!0,l>=g&&(o=r.clone(),o.autoUpdate=!1,c++,l=0),requestAnimationFrame(E)}))};let camera,scene,renderer;function init(){camera=new THREE.PerspectiveCamera(70,window.innerWidth/window.innerHeight,.1,100),camera.position.z=4,scene=new THREE.Scene;const e=new THREE.TorusKnotGeometry(.75,.3,128,32,1),r=new THREE.MeshBasicMaterial({vertexColors:!0}),n=new GIMesh(e,r);scene.add(n);const t=[];for(let e=0;e<8;e++)t.push(new THREE.MeshBasicMaterial({color:16777215*Math.random(),side:THREE.BackSide}));const o=new THREE.BoxGeometry(3,3,3),i=new THREE.Mesh(o,t);scene.add(i),renderer=new THREE.WebGLRenderer,renderer.setPixelRatio(window.devicePixelRatio),renderer.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(renderer.domElement),new SimpleGI(renderer,scene);const a=new OrbitControls(camera,renderer.domElement);a.minDistance=1,a.maxDistance=10,window.addEventListener("resize",onWindowResize)}function onWindowResize(){camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight)}function animate(){requestAnimationFrame(animate),renderer.setRenderTarget(null),renderer.render(scene,camera)}init(),animate();